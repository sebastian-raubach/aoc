import{a as v,c as F,V as O}from"./color-BQnLySqr.js";import{a as $}from"./math-CNJFRd3b.js";import{a4 as I,v as P,o as M,c as B,a as D,w as R,a6 as k,ab as m}from"./index-Ch0nwna5.js";const q={class:"canvas-holder"},A=I({__name:"V6",props:{grid:{},height:{},width:{},start:{},obstacles:{},path:{}},setup(w){const s=w;let h,r;const t={bgGradient:[],fgGradient:[],factor:8,pathIndex:0,obstacleIndex:0},g=()=>{const l=t.pathIndex;if(r.fillStyle=t.fgGradient[l],r.fillRect(s.path[l].x*t.factor,s.path[l].y*t.factor,t.factor,t.factor),l<s.path.length-1)t.pathIndex++,window.requestAnimationFrame(()=>g());else{const n=new Map,o=new Set;s.obstacles.forEach(a=>{const f=$(a,{x:Math.floor(s.width/2),y:Math.floor(s.height/2)});o.add(f);let e=n.get(f);e?e.push(a):e=[a],n.set(f,e)}),window.requestAnimationFrame(()=>p(n,[...o].sort((a,f)=>a-f)))}},p=(l,n)=>{r.fillStyle="#f1f2f6";const o=l.get(n[t.obstacleIndex++]);o==null||o.forEach(a=>{r.beginPath(),r.arc(a.x*t.factor+t.factor/2,a.y*t.factor+t.factor/2,t.factor/4,0,2*Math.PI),r.fill()}),t.obstacleIndex<n.length-1&&(t.obstacleIndex++,window.requestAnimationFrame(()=>p(l,n)))},x=()=>{const l=Math.max(Math.abs(s.start.x-s.width),Math.abs(s.start.x))+Math.max(Math.abs(s.start.y-s.height),Math.abs(s.start.y));t.pathIndex=0,t.obstacleIndex=0,t.bgGradient=v("#57606f","#2f3542",l),t.fgGradient=F(O,s.path.length),h=document.getElementById("partOne"),h.width=s.width*t.factor,h.height=s.height*t.factor,r=h.getContext("2d"),r.translate(.5,.5),r.lineWidth=1,r.fillStyle="#222222",r.fillRect(0,0,h.width,h.height);for(let n=0;n<s.height;n++)for(let o=0;o<s.width;o++){const a=$({x:o,y:n},s.start);r.fillStyle=t.bgGradient[a],r.fillRect(o*t.factor,n*t.factor,t.factor,t.factor)}r.fillStyle="#a4b0be",s.grid.forEach(n=>{const[o,a]=n.split("|").map(Number);r.fillRect(o*t.factor,a*t.factor,t.factor,t.factor)}),window.requestAnimationFrame(()=>g())};return P(()=>x()),(l,n)=>(M(),B("div",q,n[0]||(n[0]=[D("canvas",{id:"partOne",class:"canvas",height:"910",width:"910"},null,-1)])))}}),z=I({__name:"D6",props:{input:{}},emits:["onFinished"],setup(w,{emit:s}){const h=w,r=s,t=new Set,g=new Set,p=[],x=[[0,-1],[1,0],[0,1],[-1,0]],l=[];let n,o,a=0,f,e;const _=()=>{for(;e.x>=0&&e.x<n&&e.y>=0&&e.y<o;){g.add(`${e.x}|${e.y}`),p.push(e);for(let d=0;d<3;d++){const i={x:e.x+x[a][0],y:e.y+x[a][1]};if(t.has(`${i.x}|${i.y}`))a=(a+1)%x.length;else{e=i;break}}}return g.size},S=()=>{e=f,a=0;const d=new Set;for(;e.x>=0&&e.x<n&&e.y>=0&&e.y<o;){if(d.has(`${e.x}|${e.y}|${a}`))return!0;d.add(`${e.x}|${e.y}|${a}`);for(let i=0;i<3;i++){const c={x:e.x+x[a][0],y:e.y+x[a][1]};if(t.has(`${c.x}|${c.y}`))a=(a+1)%x.length;else{e=c;break}}}return!1},E=()=>{const d=new Set;for(let i=1;i<p.length;i++){const c=p[i];if(c.x===f.x&&c.y===f.y)continue;t.add(`${c.x}|${c.y}`);const u=S();t.delete(`${c.x}|${c.y}`),u&&d.add(`${p[i].x}|${p[i].y}`)}return d.forEach(i=>{const[c,u]=i.split("|").map(Number);l.push({x:c,y:u})}),d},G=()=>{if(h.input){o=h.input.length,n=h.input[0].length,h.input.forEach((c,u)=>{c.split("").forEach((b,y)=>{b==="^"?(f={x:y,y:u},e={x:y,y:u}):b==="#"&&t.add(`${y}|${u}`)})});const d=_(),i=E();r("onFinished",d,i.size)}};return R(()=>h.input,()=>G(),{immediate:!0}),(d,i)=>(M(),k(A,{grid:m(t),height:m(o),obstacles:l,path:p,start:m(f),width:m(n)},null,8,["grid","height","start","width"]))}});export{z as default};
